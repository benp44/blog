<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unit Testing on Unrecognized Escape Sequence</title>
    <link>https://benp44.github.io/blog/tags/unit-testing/</link>
    <description>Recent content in Unit Testing on Unrecognized Escape Sequence</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 03 Jun 2018 15:05:19 +0100</lastBuildDate>
    
	<atom:link href="https://benp44.github.io/blog/tags/unit-testing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Getting started with Google Test</title>
      <link>https://benp44.github.io/blog/posts/getting-started-with-gtest/</link>
      <pubDate>Sun, 03 Jun 2018 15:05:19 +0100</pubDate>
      
      <guid>https://benp44.github.io/blog/posts/getting-started-with-gtest/</guid>
      <description>Unit testing in C++ I cut my teeth with TDD working in C# and taking advantage of the variety of really nice unit testing and mocking tools available within the cosy Microsoft playground. But in the last few years I&#39;ve found myself working with C++ a lot more, and I really wanted to ensure that the unit testing experience was, as far as possible, as convenient and powerful.
Unit testing can be a little dry at times (what!</description>
    </item>
    
  </channel>
</rss>