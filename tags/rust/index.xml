<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust on Unrecognized Escape Sequence</title>
    <link>https://benp44.github.io/blog/tags/rust/</link>
    <description>Recent content in Rust on Unrecognized Escape Sequence</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 01 Mar 2020 15:05:19 +0100</lastBuildDate>
    
	<atom:link href="https://benp44.github.io/blog/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rust: Results, Options and Combinators</title>
      <link>https://benp44.github.io/blog/posts/useful-rust-combinators/</link>
      <pubDate>Sun, 01 Mar 2020 15:05:19 +0100</pubDate>
      
      <guid>https://benp44.github.io/blog/posts/useful-rust-combinators/</guid>
      <description>As you start to write Rust code, you find yourself regularly using the match syntax. This comes up due to Rust&amp;rsquo;s error handling pattern, specifically the Result and Option types. Personally, I found that writing matches got old quite quickly. Rust is a concise language in general, so the match-blocks feels verbose, and I start to feel uncomfortable with the indented blocks of code that often end up inside the match.</description>
    </item>
    
  </channel>
</rss>